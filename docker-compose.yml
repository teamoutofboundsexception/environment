version: "3"

services:
  backend:
    command: ["gradle", "clean", "bootRun", "--args=\"--spring.profiles.active=docker\""]
    depends_on:
     - "database"
     - "graph"
    image: "gradle:5.4-jdk"
    ports:
     - "8080:8080"
    restart: "always"
    volumes:
     - "./backend:/application"
    working_dir: "/application"
  database:
    environment:
     - "MYSQL_DATABASE=application"
     - "MYSQL_ROOT_PASSWORD=root"
    image: "mariadb:10.3"
    ports:
     - "3306:3306"
    restart: "always"
    volumes:
     - "./database/data:/var/lib/mysql"
  frontend:
    depends_on:
     - "backend"
     - "frontend-builder"
    environment:
     - "API_ENDPOINT=http://localhost:8080"
    image: "nginx:1.17"
    ports:
     - "8000:80"
    restart: "always"
    volumes:
     - "./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro"
     - "./frontend/html:/usr/share/nginx/html:ro"
    working_dir: "/usr/share/nginx/html"
  frontend-builder:
    command: "bash -c \"rm --recursive --force node_modules/* && npm install --force && npm run build --force\""
    image: "node:12.4"
    environment:
     - "API_ENDPOINT=http://localhost:8080"
    restart: "no"
    volumes:
     - "./frontend:/application"
    working_dir: "/application"
  graph:
    image: "neo4j:3.5"
    ports:
     - "7473:7473"
     - "7474:7474"
    restart: "always"
    volumes:
     - "./graph/data:/data"

